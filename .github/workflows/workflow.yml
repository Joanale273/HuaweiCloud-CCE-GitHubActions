name: Huawei Cloud CCE - CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-publish-deploy:
    name: Build, Push and Deploy
    runs-on: ubuntu-latest
    env:
      REGION: ${{ secrets.REGION }}
      ACCESS_KEY_ID: ${{ secrets.HC_ACCESS_KEY_ID }}
      ACCESS_KEY_SECRET: ${{ secrets.HC_ACCESS_KEY_SECRET }}
      PROJECT_ID: ${{ secrets.HC_CCE_PROJECT_ID }}
      CLUSTER_ID: ${{ secrets.HC_CCE_CLUSTER_ID }}
      KUBECONFIG: ${{ secrets.HC_CCE_KUBECONFIG }}
      SWR_ENDPOINT: ${{ secrets.SWR_ENDPOINT }}
      SWR_ORGANIZATION_NAME: ${{ secrets.SWR_ORGANIZATION_NAME }}
      SWR_USER: ${{ secrets.SWR_USER }}
      SWR_PW: ${{ secrets.SWR_PW }}
      IMAGE_NAME: aspnetapp
      DEPLOYMENT_NAME: aspnetapp
      DOCKER_WORKING_DIRECTORY: ./docker
      KUBERNETES_WORKING_DIRECTORY: ./kubernetes

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to SWR
        uses: huaweicloud/swr-login@v2.1.0
        with:
          region: ${{ env.REGION }}
          access-key-id: ${{ env.ACCESS_KEY_ID }}
          access-key-secret: ${{ env.ACCESS_KEY_SECRET }}

      - name: Build Docker image
        run: |
          docker build -t "${{ env.SWR_ENDPOINT }}/${{ env.SWR_ORGANIZATION_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" -f "${{ env.DOCKER_WORKING_DIRECTORY }}/Dockerfile" .

      - name: Push Docker image
        run: |
          docker push "${{ env.SWR_ENDPOINT }}/${{ env.SWR_ORGANIZATION_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"

      - name: Login to CCE
        uses: liusheng/cce-cluster-credentials@v1
        with:
          region: ${{ env.REGION }}
          access-key-id: ${{ env.ACCESS_KEY_ID }}
          access-key-secret: ${{ env.ACCESS_KEY_SECRET }}
          project-id: ${{ env.PROJECT_ID }}
          cluster-id: ${{ env.CLUSTER_ID }}

      - name: Deploy to CCE
        run: |
          sed -i'' -e 's/IMAGE_LABEL/${{ github.sha }}/g' "${{ env.KUBERNETES_WORKING_DIRECTORY }}"/*deployment.yaml
          kubectl apply -f "${{ env.KUBERNETES_WORKING_DIRECTORY }}"
      
      - name: Create image pull secret for SWR
        run: |
          kubectl create secret docker-registry swr-secret \
            --docker-server=${{ env.SWR_ENDPOINT }} \
            --docker-username=${{ secrets.SWR_USER }} \
            --docker-password=${{ secrets.SWR_PW }} \
            --namespace=default
      
      
